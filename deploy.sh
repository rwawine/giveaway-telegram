#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞
# –ó–∞–ø—É—Å–∫–∞—Ç—å —Å –ø—Ä–∞–≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è botuser

set -e  # –í—ã—Ö–æ–¥–∏–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "main.py" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    echo "–°–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä: .env.example"
    exit 1
fi

echo "‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
REQUIRED_VARS=(LOYALTY_CARD_LENGTH CAMPAIGN_1_NAME CAMPAIGN_2_NAME MANUAL_REVIEW_REQUIRED)
for VAR in "${REQUIRED_VARS[@]}"; do
  if ! grep -q "^$VAR=" .env; then
    echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: $VAR –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env (–±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
  fi
done

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ ! -d "venv" ]; then
    echo "üì¶ –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    python3 -m venv venv
fi

source venv/bin/activate
echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
pip install --upgrade pip
pip install -r requirements.txt

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
echo "üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏..."
mkdir -p data photos exports logs backups

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram..."
python3 -c "
import os
from dotenv import load_dotenv
import requests

load_dotenv()
bot_token = os.getenv('BOT_TOKEN')
if not bot_token or bot_token == 'YOUR_BOT_TOKEN_HERE':
    print('‚ùå –ù–µ –∑–∞–¥–∞–Ω BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ')
    exit(1)

try:
    response = requests.get(f'https://api.telegram.org/bot{bot_token}/getMe', timeout=10)
    if response.status_code == 200:
        data = response.json()
        if data['ok']:
            print(f'‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{data[\"result\"][\"username\"]}')
        else:
            print(f'‚ùå –û—à–∏–±–∫–∞ API: {data}')
            exit(1)
    else:
        print(f'‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}')
        exit(1)
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}')
    exit(1)
"

# –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
python3 - << 'PY'
import os, shutil, datetime
from dotenv import load_dotenv
from config import get_database_path
load_dotenv()
path = get_database_path()
if os.path.exists(path):
    ts = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
    dst = os.path.join('backups', f'db_backup_{ts}{os.path.splitext(path)[1]}')
    shutil.copy2(path, dst)
    print(f'‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {dst}')
else:
    print('‚ÑπÔ∏è –§–∞–π–ª –±–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±—ç–∫–∞–ø')
PY

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º/–º–∏–≥—Ä–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º/–º–∏–≥—Ä–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
python3 - << 'PY'
import sys
from database.db_manager import init_database, get_db_connection
from config import DATABASE_TYPE

try:
    init_database()
    # –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ö–µ–º—ã
    with get_db_connection() as conn:
        c = conn.cursor()
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        def safe_exec(sql):
            try:
                c.execute(sql)
            except Exception:
                pass
        # DuckDB/SQLite —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        # –î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ª–±—Ü—ã
        safe_exec("ALTER TABLE applications ADD COLUMN loyalty_card_number TEXT")
        safe_exec("CREATE UNIQUE INDEX IF NOT EXISTS idx_applications_loyalty_card ON applications(loyalty_card_number)")
        safe_exec("ALTER TABLE applications ADD COLUMN campaign_type TEXT")
        safe_exec("ALTER TABLE applications ADD COLUMN admin_notes TEXT")
        safe_exec("ALTER TABLE applications ADD COLUMN manual_review_status TEXT")
        # –û–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–≤ —Ä–∞–º–∫–∞—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π)
        try:
            c.execute("UPDATE applications SET campaign_type = COALESCE(campaign_type,'pending')")
            c.execute("UPDATE applications SET manual_review_status = COALESCE(manual_review_status,'pending')")
        except Exception:
            pass
        # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è DuckDB)
        if DATABASE_TYPE == 'duckdb':
            try:
                c.execute("ALTER TABLE applications DROP COLUMN telegram_username")
            except Exception:
                pass
        conn.commit()
    print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}')
    sys.exit(1)
PY

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ telegram-bot.service –≤ /etc/systemd/system/"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl enable telegram-bot"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl start telegram-bot"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: sudo systemctl status telegram-bot"
echo ""
echo "üåê –í–µ–±-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞: http://localhost:5000"
